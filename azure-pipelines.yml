# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  imageRepo: 'sampleapp'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image and push it
      inputs:
        containerRegistry: 'acrtestlg-conn-ACR'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      displayName: Publish kubernetes dir to pipeline
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to Dev 
  dependsOn: Build
  variables:
   acrSecret: k8sacrauth
  jobs: 
  - job: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: ubuntu-latest 
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: download published kubernetes dir from the pipeline
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
    - task: KubernetesManifest@0
      displayName: Create Secret to access ACR from AKS
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'aks-test-lg-AKS-Conn'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrSecret)'
        dockerRegistryEndpoint: 'acrtestlg-conn-ACR'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'aks-test-lg-AKS-Conn'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/manifests/deployment.yml
          $(Pipeline.Workspace)/manifests/service.yml